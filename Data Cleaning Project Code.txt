-- SQL Project: Layoffs Data Cleaning
-- Dataset: https://www.kaggle.com/datasets/swaptr/layoffs-2022

-- Step 0: Load raw data
SELECT * FROM world_layoffs.layoffs;

-- Step 1: Create a staging table to preserve raw data
CREATE TABLE world_layoffs.layoffs_staging LIKE world_layoffs.layoffs;

INSERT INTO world_layoffs.layoffs_staging
SELECT * FROM world_layoffs.layoffs;

-- Step 2: Identify and remove duplicate records

-- Check for exact duplicates using ROW_NUMBER
SELECT * FROM (
    SELECT *, ROW_NUMBER() OVER (
        PARTITION BY company, location, industry, total_laid_off, percentage_laid_off, `date`, stage, country, funds_raised_millions
    ) AS row_num
    FROM world_layoffs.layoffs_staging
) sub
WHERE row_num > 1;

-- Instead of deleting directly, create a new table with row numbers
CREATE TABLE world_layoffs.layoffs_staging2 (
    company TEXT,
    location TEXT,
    industry TEXT,
    total_laid_off INT,
    percentage_laid_off TEXT,
    `date` TEXT,
    stage TEXT,
    country TEXT,
    funds_raised_millions INT,
    row_num INT
);

-- Populate with row numbers for duplicate detection
INSERT INTO world_layoffs.layoffs_staging2
SELECT *, ROW_NUMBER() OVER (
    PARTITION BY company, location, industry, total_laid_off, percentage_laid_off, `date`, stage, country, funds_raised_millions
) AS row_num
FROM world_layoffs.layoffs_staging;

-- Delete records where row_num >= 2 (retain 1st instance only)
DELETE FROM world_layoffs.layoffs_staging2
WHERE row_num >= 2;

-- Step 3: Standardize data values

-- Standardize empty strings to NULL for `industry`
UPDATE world_layoffs.layoffs_staging2
SET industry = NULL
WHERE industry = '';

-- Populate missing industry values based on company
UPDATE world_layoffs.layoffs_staging2 t1
JOIN world_layoffs.layoffs_staging2 t2
ON t1.company = t2.company
SET t1.industry = t2.industry
WHERE t1.industry IS NULL AND t2.industry IS NOT NULL;

-- Normalize variations in industry names
UPDATE world_layoffs.layoffs_staging2
SET industry = 'Crypto'
WHERE industry IN ('CryptoCurrency', 'Crypto Currency');

-- Clean country values (e.g., remove trailing periods)
UPDATE world_layoffs.layoffs_staging2
SET country = TRIM(TRAILING '.' FROM country);

-- Convert date column to proper DATE format
UPDATE world_layoffs.layoffs_staging2
SET `date` = STR_TO_DATE(`date`, '%m/%d/%Y');

ALTER TABLE world_layoffs.layoffs_staging2
MODIFY COLUMN `date` DATE;

-- Step 4: Handle NULLs and drop unnecessary records

-- Remove rows with no layoff data
DELETE FROM world_layoffs.layoffs_staging2
WHERE total_laid_off IS NULL AND percentage_laid_off IS NULL;

-- Drop temporary row_num column
ALTER TABLE world_layoffs.layoffs_staging2
DROP COLUMN row_num;

-- Final cleaned data
SELECT * FROM world_layoffs.layoffs_staging2;
